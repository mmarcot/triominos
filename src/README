###################################################################
#                            TRIOMINO                             #
###################################################################

le : 02/05/14



1) Fonctionement
-----------------------------------------

Trois modes sont possibles :

-> le mode RANDOM en laissant l'ordinateur decider de la base et de la largeur du plateau, ainsi que de la valeur de tous les triominos.
  COMMANDE : java Triominos

-> le mode RANDOM PARAMETRABLE : vous laissez l'ordinateur choisir la valeur des triominos, mais vous entrez la base et la largeur du plateau.
  COMMANDE : java Triominos base largeur
  EX : java Triominos 3 5

-> le mode FICHIER : vous entrez dans un fichier les triominos de facon formaté (voir les 2 exemples fournis)
  COMMANDE : java Triominos nom_de_votre_fichier
  EX : java Triominos mon_jeu.txt 





2) Originalités
---------------------------------------

  ### Classe Triomino ###

Nous avons décidé d'ajouter dans cette classe un attribut qui indique si le triomino est placé ou non sur le plateau, cela permet d'éviter de le sortir/rentrer du jeu de triomino, et donc de simplifier le code.


  ### Classe Jeu ###

Dans cette classe nous avons ajouté un constructeur permettant de créer un jeu à partir d'un tableau de triominos passé en parametre, cela nous est utile pour créer le jeu correspondant aux données lues dans un fichier texte.


  ### Classe LectureFichier ###

Nous avons choisis d'implementer cette classe pour centraliser toutes les instructions relatives à la lecture de triominos dans un fichier texte. On a choisis d'utiliser 2 ArrayList : une pour stocker toutes le valeurs du milieu des triominos (coins B et C), et l'autre pour les valeurs du bas (coin A).


  ### Classe Triominos ###

La methode centrale est "resoudre" qui implemente l'algorithme récursif.

Les contraintes de placement sont gérées dans la methode "contraintes" qui différencie les lignes paires des impaires.

Pour passer d'une position (donc un simple entier) à des coordonnées de ligne et de colonne dans un triangle nous avons réalisé la méthode "posToCoord". Cette methode appelle elle même la methode "tailleLigne" qui renvoie un tableau contenant la taille de chacune des lignes du plateau. Cela afin de faciliter les opérations dans posToCoord.

Nous avons choisis d'utiliser la classe BigInteger pour le type du compteur de coups car nous nous sommes rendu compte que celui-ci pouvait depasser la valeur maximale d'un Integer normal.




2) Conclusion
---------------------------------------

Ce qu'il y a de bien c'est que notre projet fonctionne avec n'importe quelle taille de plateau (testé jusqu'à 30 soit 900 triominos). La résolution devient vraiment complexe lorsqu'on augmente la base. Nous avons dû passer environ 15h sur ce projet, ce qui nous à pris le plus de temps est :

  - la gestion des contraintes de placement
  - devoir retrouver un numéro de ligne et de colonne à partir d'une position







